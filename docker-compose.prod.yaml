services:
  data-studio-ui:
    container_name: ${PROJECT_NAME}-ui
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    restart: always
    expose:
      - 3000
    networks:
      - shared-network
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 400M
        reservations:
          cpus: '0.1'
          memory: 200M

  data-studio-api:
    container_name: ${PROJECT_NAME}-api
    build:
      context: ./backend
      dockerfile: ./docker/prod.Dockerfile
    entrypoint: /app/docker/server-entrypoint.sh
    env_file: .env
    expose:
      - 8000
    depends_on:
      - data-studio-redis
      - data-studio-db
    restart: always
    networks:
      - shared-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1.2G
        reservations:
          cpus: '0.3'
          memory: 600M

  data-studio-celery-worker:
    container_name: ${PROJECT_NAME}-celery-worker
    build:
      context: ./backend
      dockerfile: ./docker/prod.Dockerfile
    entrypoint: /app/docker/celery-entrypoint.sh
    env_file: .env
    restart: always
    expose:
      - 5555
    depends_on:
      - data-studio-api
      - data-studio-redis
      - data-studio-db
    networks:
      - shared-network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.2'
          memory: 400M

  data-studio-redis:
    container_name: ${PROJECT_NAME}-redis
    restart: always
    image: redis:7.2-alpine
    command: redis-server --maxmemory 150mb --maxmemory-policy allkeys-lru
    expose:
      - 6379
    networks:
      - shared-network
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 200M
        reservations:
          cpus: '0.05'
          memory: 100M


  data-studio-db:
    container_name: ${PROJECT_NAME}-db
    image: postgres:15.5-alpine3.19
    volumes:
      - data-studio-db-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - PGSSLCERT=${PGSSLCERT}
    networks:
      - shared-network
    deploy:
      resources:
        limits:
          cpus: '0.8'
          memory: 2G
        reservations:
          cpus: '0.2'
          memory: 600M

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.18.0
    container_name: ${PROJECT_NAME}-postgres-exporter
    restart: always
    environment:
      # DATA_SOURCE_NAME: "postgresql://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable"
      DATA_SOURCE_URI: "${PROJECT_NAME}-db:${DB_PORT}/${DB_NAME}?sslmode=disable"
      DATA_SOURCE_USER: ${DB_USER}
      DATA_SOURCE_PASS: ${DB_PASSWORD}
      DATA_SOURCE_DB: ${DB_NAME}
    networks:
      - shared-network  # Same network as monitoring stack
    depends_on:
      - data-studio-db
    deploy:
      resources:
        limits:
          cpus: '0.1'     # Minimal exporter resources
          memory: 100M
        reservations:
          cpus: '0.02'
          memory: 32M

  redis-exporter:
    image: oliver006/redis_exporter:v1.74.0-alpine
    container_name: ${PROJECT_NAME}-redis-exporter
    restart: always
    environment:
      REDIS_ADDR: "redis:6379"
    networks:
      - shared-network
    depends_on:
      - data-studio-redis
    deploy:
      resources:
        limits:
          cpus: '0.05'     # Minimal exporter resources
          memory: 64M
        reservations:
          cpus: '0.02'
          memory: 32M

volumes:
  data-studio-db-data:
    name: data-studio-db-data
    driver: local

networks:
  shared-network:
    name: shared-network
    driver: bridge
    external: true

