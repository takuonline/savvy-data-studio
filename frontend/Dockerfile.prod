# FROM node:18-alpine

# WORKDIR /app

# # Install dependencies based on the preferred package manager
# COPY package.json  package-lock.json* pnpm-lock.yaml* ./

# # Install pnpm
# RUN yarn global add pnpm && \
#     pnpm i;


# COPY src ./src
# COPY public ./public
# COPY next.config.js .env .env.production tsconfig.json .prettierrc.json .eslintrc.json components.json  \
#      next-env.d.ts tailwind.config.ts tailwind.config.js postcss.config.js /app/


# RUN pnpm build

# # Next.js collects completely anonymous telemetry data about general usage. Learn more here: https://nextjs.org/telemetry
# # Uncomment the following line to disable telemetry at run time
# # ENV NEXT_TELEMETRY_DISABLED 1

# # Note: Don't expose ports here, Compose will handle that for us

# # Start Next.js in development mode based on the preferred package manager
# CMD pnpm start

FROM node:20-alpine AS base
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable
COPY next.config.js .env .env.production tsconfig.json .prettierrc.yaml .eslintrc.json components.json  \
    next-env.d.ts  \
    tailwind.config.ts tailwind.config.js postcss.config.js /app/

WORKDIR /app

COPY src ./src
COPY public ./public
COPY package.json  package-lock.json* pnpm-lock.yaml* ./


FROM base AS prod-deps
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install  --frozen-lockfile

FROM base AS build
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
RUN pnpm run build

FROM base
COPY --from=prod-deps /app/node_modules /app/node_modules
COPY --from=build /app/.next /app/.next
EXPOSE 8000
CMD [ "pnpm", "start" ]